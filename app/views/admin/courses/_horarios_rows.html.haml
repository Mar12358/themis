- hours = courses.pluck('start_time').uniq.to_a.uniq.sort
- hours = [School.today + 17.hours] if hours.empty?
- days = School.weekdays

%tr.header
  %td.day
  - days.each do |wday|
    %td.day= local_wday(wday)
- prev_time = nil
- hours.each do |time|
  - if !prev_time.nil?
    - if prev_time + 2.hour == time
      %tr
        %td.header.hour<
          = prev_time.hour + 1
          %span.min<> 00
        - days.each do |wday|
          %td.course
    - elsif prev_time + 1.hour < time
      %tr
        %td.header.hour ...
        - days.each do |wday|
          %td.course
  - prev_time = time
  %tr
    %td.header.hour<
      = time.hour
      - if time.min != 0
        %span.min<>= time.min
      - else
        %span.min<> 00
    - days.each do |wday|
      %td.course
        - courses.includes(:track).where(weekday: wday, start_time: time).order('tracks.code').each do |course|
          = link_to admin_course_path(course) do
            %div{'class' => course.track.css_class}
              - if course.future?
                ↑
              - if course.valid_until
                ↓
              = course.description(:short_track)
              - if course.valid_until
                ↓
              - if course.future?
                ↑
        = link_to new_admin_course_path(weekday: wday, start_time: time.strftime("%H:%M")) do
          %div{class: 'create_course'}
            + Agregar

